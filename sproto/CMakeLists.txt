project(sproto)

file(GLOB SPROTO_H *.h)
aux_source_directory(. SPROTO_C)

include_directories(.)
include_directories(../src)

ADD_DEFINITIONS(-DLUA_BUILD_AS_DLL)
IF(MSVC)
#ADD_DEFINITIONS(-DNOUSE_JEMALLOC -DHAVE_STRUCT_TIMESPEC -DUSE_PTHREAD_LOCK)
ENDIF()

add_library(sproto SHARED ${SPROOT_H} ${SPROTO_C})
IF(CMAKE_CL_64)
IF(MSVC)
set_target_properties(sproto PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ../../bin)
set_target_properties(sproto PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ../../bin)
ENDIF(MSVC)
ELSE(CMAKE_CL_64)
IF(MSVC)
set_target_properties(sproto PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ../../bin)
set_target_properties(sproto PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ../../bin)
ENDIF(MSVC)
ENDIF(CMAKE_CL_64)
target_link_libraries(sproto ../../bin/liblua)
ADD_DEPENDENCIES(sproto lua)

#ADD_DEPENDENCIES(sproto bson)
#set(BUILD_USE_64BITS on)
