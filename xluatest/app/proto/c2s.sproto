.package {
	type 0 : integer
	session 1 : integer
    index 2 : integer
    version 3 : integer
}

.card {
    pos   0 : integer
    value 1 : integer
}

# 背包
.item {
    id  0 : integer
    num 1 : integer
}

####################################### 
# 邮件
.mail {
    id       0 : integer
    from     1 : integer
    to       2 : integer
    title    3 : string
    content  4 : string
    viewed   5 : integer
    datetime 6 : integer
}

.outbox {
    all 0 : *mail
}

.record {
    id            0 : integer
    datetime      1 : integer
    player1       2 : string
    player2       3 : string
    player3       4 : string
    player4       5 : string
}
####################################### 
# poker

.pokerplayer {
    idx 0 : integer
    chip 1 : integer
    sex 2 : integer
    name 3 : string
    state 4 : string
    online 5 : boolean
    cards 6 : *card         # 手上的牌
    opcode 7 : integer
    sitdown 8 : boolean
}

.perflop_card {
    idx 0 : integer
    cards 1 : *card
}

.pokerrule {
}

.pokersettleitem {
    idx 0 : integer
}

.pokersettle {
    ps 0 : *pokersettleitem
}

# poker
####################################### 
####################################### 
# 麻将玩家信息，在重新链接的时候
.player {
    idx          0 : integer
    chip         1 : integer
    sex          3 : integer
    name         4 : string
    state        5 : integer
    last_state   6 : integer
    que          7 : integer
    takecardsidx 8 : integer
    takecardscnt 9 : integer
    takecardslen 10 : integer
    takecards    11 : *card
    cards        12 : *card
    leadcards    13 : *card
    putcards     14 : *card
    putidx       15 : integer  # 无用
    hold_card    16 : card
    hucards      17 : *card
}

.huinfo {
    idx        0 : integer
    card       1 : integer
    dian       2 : integer
    hutype     3 : integer
    jiaotype   4 : integer
}

.opinfo {
    idx        0 : integer      # 谁有操作
    opcode     1 : integer      # 什么操作
    card       2 : integer      # 针对那张牌
    dian       3 : integer      # 谁打的，可能自摸
    gangtype   4 : integer
    hutype     5 : integer      # 如果是胡，请判断下
    jiaotype   6 : integer      # 如果是胡，请判断下
}

.crsc {
    hujiaozhuanyi 0 : integer
    zimo          1 : integer
    dianganghua   2 : integer
    daiyaojiu     3 : integer
    duanyaojiu    4 : integer
    jiangdui      5 : integer
    tiandihu      6 : integer
    top           7 : integer
}

.crsx {
    huqidui       0 : integer
    qingyise      1 : integer
}

.rule {
    id 0 : integer
}

.settlementitem {
    idx       0 : integer           # 关于谁的
    chip      1 : integer           # 赢与输，多少
    opcode    2 : integer           # 什么原因，若是胡，请还要判断小面两个
    gangtype  3 : integer
    hutype    4 : integer           
    jiaotype  5 : integer
    them      6 : *integer          # 针对谁
    huazhu    7 : boolean           # 是否是花猪
    dajiao    8 : boolean           # 是否是大叫
    tuisui    9 : boolean           # 是否是退税
}

.settle {
    p1 0 : settlementitem
    p2 1 : settlementitem
    p3 2 : settlementitem
    p4 3 : settlementitem
}

# 麻将
#######################################
####################################### 
# 一般模块 [1, 100)
handshake 1 {
    response {
    	errorcode 0 : integer
    }
}

logout 2 {
    response {
        errorcode 0 : integer
    }
}

inituser 3 {
    response {
        errorcode 0 : integer
    }
}


####################################### 
# 系统模块 [100, 500)
# 第一条消息，主要是一个写个人信息
first 104 {
    response {
        errorcode 0 : integer
        nickname  1 : string
    }
}

checkindaily 105 {
    response {
        errorcode 0 : integer
    }
}

board 106 {
    response {
        errorcode 0 : integer
        text      1 : string
    }
}

adver 107 {
    response {
        errorcode 0 : integer
        text      1 : string
    }
}

fetchinbox 108 {
    request {
        fromdate  0 : integer
    }
    response {
        errorcode 0 : integer
        list      1 : *mail
    }
}

syncsysmail 109 {
    request {
        all       0 : *integer
    }
    response {
        errorcode 0 : integer
        inbox     1 : *mail
    }
}

viewedmail 110 {
    request {
        mailid    0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

records 111 {
    response {
        errorcode 0 : integer
        records   1 : *record
    }
}

record 112 {
    request {
        id 0 : integer
    }
    response {
        errorcode 0 : integer
        r         1 : string
    }
}

avatar 113 {
    response {
        errorcode 0 : integer
        nickname 1 : string
        nameid 2 : string
        rcard 3 : integer
    }
}

room_info 114 {
    response {
        errorcode 0 : integer
        isCreated 1 : boolean
        joined    2 : boolean
        roomid    3 : integer
    }
}

package_info 115 {
    response {
        errorcode 0 : integer
        all       1 : *item
    }
}
####################################### 
# 德州协议 [720, 800)

# 请求
pokercall 720 {
    request {
        idx       0 : integer
        opcode    1 : integer
        coin      2 : integer
    }
    response {
        errorcode 0 : integer
    }
}

# 确认四个玩家都呈现完毕后，状态转移
pokerstep 721 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokerrestart 722 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokerready 723 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
        idx 1 : integer
    }
}

pokermatch 724 {
    request {
        mode 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokercreate 725 {
    request {
        provice    0 : integer
        ju         1 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
    }
}

pokerjoin 726 {
    request {
        roomid 0 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        mode      2 : integer          # 房间模式
        state     3 : string           # 房间状态，这里其实没有用
        rule      4 : pokerrule        # 在自定义有用,作为模式的补充
        me        5 : pokerplayer
        ps        6 : *pokerplayer
    }
}

pokerrejoin 727 {
    response {
        errorcode 0 : integer
        roomid    1 : integer
        mode      2 : integer
        state     3 : string
        rule      4 : pokerrule
        me        5 : pokerplayer
        ps        6 : *pokerplayer
    }
}

pokerleave 728 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

pokerjoined 729 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
    }   
}

# 德州协议 [720, 800)
####################################### 

####################################### 
# 麻将协议 [500, 600)

call 501 {
    request {
        op        0 : opinfo
    }
    response {
        errorcode 0 : integer
    }
}

# shuffle 502 {
#     request {
#         idx       0 : integer
#     }
#     response {
#         errorcode 0 : integer
#     }
# }

# dice 503 {
#     request {
#         idx       0 : integer
#     }
#     response {
#         errorcode 0 : integer
#         d1        1 : integer
#         d2        2 : integer
#     }
# }

lead 504 {
    request {
        idx       0 : integer
        card      1 : integer
        isHoldcard 2 : boolean
    } 
    response {
        errorcode 0 : integer
    }
}

step 505 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

restart 506 {
    request {
        idx       0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

# rchat 507 {
#     request {
#         idx       0 : integer
#         type      1 : integer
#         textid    2 : integer
#         sdsteam   3 : string
#     }
#     response {
#         errorcode 0 : integer
#     }
# }

xuanpao 508 {
    request {
        idx       0 : integer
        fen       1 : integer
    }
    response {
        errorcode 0 : integer
    }
}

xuanque 509 {
    request {
        idx       0 : integer
        que        1 : integer
    }
    response {
        errorcode 0 : integer
    }
}

ready 510 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
        idx 1 : integer
    }
}

create 511 {
    request {
        provice    0 : integer
        ju         1 : integer
        overtype   2 : integer
        sc         3 : crsc
        sx         4 : crsx
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
    }
}

join 512 {
    request {
        roomid 0 : integer
    }
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        me        3 : player
        rule      4 : rule
        ps        5 : *player
    }
}

rejoin 513 {
    response {
        errorcode 0 : integer
        roomid    1 : integer
        room_max  2 : integer
        me        3 : player
        rule      4 : rule
        ps        5 : *player
    }
}

leave 514 {
    request {
        idx 0 : integer
    }
    response {
        errorcode 0 : integer
    }
}

# 麻将协议
####################################### 
